<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ixilink.banknote_box.common.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.ixilink.banknote_box.common.pojo.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="modifiable" jdbcType="INTEGER" property="modifiable" />
    <result column="deleting" jdbcType="INTEGER" property="deleting" />
    <result column="need_login" jdbcType="INTEGER" property="needLogin" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="is_select" jdbcType="INTEGER" property="isSelect" />
    <result column="library_id" jdbcType="INTEGER" property="libraryId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, role_name, remarks, create_time, modifiable, deleting, need_login, state, is_select, 
    library_id
  </sql>
  <select id="selectByExample" parameterType="com.ixilink.banknote_box.common.pojo.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0">
      limit ${limitStart} , ${count}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ixilink.banknote_box.common.pojo.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ixilink.banknote_box.common.pojo.Role">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into role (role_name, remarks, create_time, 
      modifiable, deleting, need_login, 
      state, is_select, library_id
      )
    values (#{roleName,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{modifiable,jdbcType=INTEGER}, #{deleting,jdbcType=INTEGER}, #{needLogin,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{isSelect,jdbcType=INTEGER}, #{libraryId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ixilink.banknote_box.common.pojo.Role">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        role_name,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifiable != null">
        modifiable,
      </if>
      <if test="deleting != null">
        deleting,
      </if>
      <if test="needLogin != null">
        need_login,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="isSelect != null">
        is_select,
      </if>
      <if test="libraryId != null">
        library_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifiable != null">
        #{modifiable,jdbcType=INTEGER},
      </if>
      <if test="deleting != null">
        #{deleting,jdbcType=INTEGER},
      </if>
      <if test="needLogin != null">
        #{needLogin,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="isSelect != null">
        #{isSelect,jdbcType=INTEGER},
      </if>
      <if test="libraryId != null">
        #{libraryId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ixilink.banknote_box.common.pojo.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.modifiable != null">
        modifiable = #{record.modifiable,jdbcType=INTEGER},
      </if>
      <if test="record.deleting != null">
        deleting = #{record.deleting,jdbcType=INTEGER},
      </if>
      <if test="record.needLogin != null">
        need_login = #{record.needLogin,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.isSelect != null">
        is_select = #{record.isSelect,jdbcType=INTEGER},
      </if>
      <if test="record.libraryId != null">
        library_id = #{record.libraryId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set id = #{record.id,jdbcType=INTEGER},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      modifiable = #{record.modifiable,jdbcType=INTEGER},
      deleting = #{record.deleting,jdbcType=INTEGER},
      need_login = #{record.needLogin,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      is_select = #{record.isSelect,jdbcType=INTEGER},
      library_id = #{record.libraryId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ixilink.banknote_box.common.pojo.Role">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifiable != null">
        modifiable = #{modifiable,jdbcType=INTEGER},
      </if>
      <if test="deleting != null">
        deleting = #{deleting,jdbcType=INTEGER},
      </if>
      <if test="needLogin != null">
        need_login = #{needLogin,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="isSelect != null">
        is_select = #{isSelect,jdbcType=INTEGER},
      </if>
      <if test="libraryId != null">
        library_id = #{libraryId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ixilink.banknote_box.common.pojo.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      modifiable = #{modifiable,jdbcType=INTEGER},
      deleting = #{deleting,jdbcType=INTEGER},
      need_login = #{needLogin,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      is_select = #{isSelect,jdbcType=INTEGER},
      library_id = #{libraryId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>