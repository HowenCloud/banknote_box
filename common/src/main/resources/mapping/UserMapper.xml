<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ixilink.banknote_box.common.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.ixilink.banknote_box.common.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="library_id" jdbcType="INTEGER" property="libraryId" />
    <result column="libraryName" jdbcType="VARCHAR" property="libraryName" />
  </resultMap>
  <resultMap id="UserSimple" type="com.ixilink.banknote_box.common.model.UserSimple">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, login_name, password, name, sex, department_id, role_id, state, create_time, 
    library_id
  </sql>
  <select id="selectByExample" parameterType="com.ixilink.banknote_box.common.pojo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0">
      limit ${limitStart} , ${count}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ixilink.banknote_box.common.pojo.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ixilink.banknote_box.common.pojo.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (login_name, password, name, 
      sex, department_id, role_id, 
      state, create_time, library_id
      )
    values (#{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, #{libraryId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ixilink.banknote_box.common.pojo.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        login_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="libraryId != null">
        library_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="libraryId != null">
        #{libraryId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ixilink.banknote_box.common.pojo.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loginName != null">
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.libraryId != null">
        library_id = #{record.libraryId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      role_id = #{record.roleId,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT},
      library_id = #{record.libraryId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ixilink.banknote_box.common.pojo.User">
    update user
    <set>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="libraryId != null">
        library_id = #{libraryId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ixilink.banknote_box.common.pojo.User">
    update user
    set login_name = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      library_id = #{libraryId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="userInfo" parameterType="com.ixilink.banknote_box.common.pojo.UserExample" resultMap="BaseResultMap">
    select
    user.id, user.login_name, user.password, user.name, user.sex, user.department_id, d.department_name, user.role_id, r.role_name, user.state, user.create_time, user.library_id, bl.name libraryName
    from user
    left join department d on d.id = user.department_id
    left join role r on r.id = user.role_id
    left join back_library bl on bl.id=user.library_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0">
      limit ${limitStart} , ${count}
    </if>
  </select>

  <select id="userInfoById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    user.id, user.login_name, user.password, user.name, user.sex, user.department_id, d.department_name, user.role_id, r.role_name, user.state, user.create_time, user.library_id
    from user
    left join department d on d.id = user.department_id
    left join role r on r.id = user.role_id
    where user.id = #{id}
  </select>

  <select id="departments" parameterType="java.lang.Integer" resultType="java.util.Map">
    SELECT id,department_name departmentName FROM department
    WHERE state=1
    <if test="libraryId != null and libraryId > 0">
      and library_id = #{libraryId}
    </if>
  </select>

  <!--<select id="roles" parameterType="java.lang.Integer" resultType="java.util.Map">
    SELECT id,role_name roleName FROM role
    WHERE state=1
    <if test="libraryId != null and libraryId > 0">
      and library_id = #{libraryId}
    </if>
    <if test="isSystemer != null ">
      and modifiable=1 and deleting=2 and need_login=2
    </if>
  </select>-->
  <select id="roles" parameterType="java.lang.Integer" resultType="java.util.Map">
   SELECT t.id,t.roleName FROM
   (SELECT r.id,r.role_name roleName,IFNULL(rCount.num,0)num,r.state,r.library_id,r.modifiable,r.deleting,r.need_login FROM role r LEFT JOIN (SELECT role_id,COUNT(0)num FROM USER GROUP BY role_id)rCount ON rCount.role_id=r.`id` )t
   WHERE t.state=1
    <if test="libraryId != null and libraryId > 0">
    and t.library_id = #{libraryId}
    </if>
    <if test="isSystemer != null ">
    and t.modifiable=1 AND t.deleting=2 AND t.need_login=2 AND t.num=0
    </if>
    </select>

  <select id="getSimpleUser" resultMap="UserSimple">
    SELECT u.`id`, u.`name` FROM USER u
    WHERE u.library_id = #{libraryId} and u.role_id = #{roleId}
  </select>

</mapper>