<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ixilink.banknote_box.common.dao.OutLibraryTaskMapper">
  <resultMap id="BaseResultMap" type="com.ixilink.banknote_box.common.pojo.OutLibraryTask">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="total_line" jdbcType="INTEGER" property="totalLine" />
    <result column="total_box" jdbcType="INTEGER" property="totalBox" />
    <result column="total_money" jdbcType="INTEGER" property="totalMoney" />
    <result column="publisher" jdbcType="INTEGER" property="publisher" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="apply_user" jdbcType="INTEGER" property="applyUser" />
    <result column="apply_state" jdbcType="INTEGER" property="applyState" />
    <result column="approval_reason" jdbcType="VARCHAR" property="approvalReason" />
    <result column="check_state" jdbcType="INTEGER" property="checkState" />
    <result column="boxing_state" jdbcType="INTEGER" property="boxingState" />
    <result column="task_state" jdbcType="INTEGER" property="taskState" />
    <result column="task_schedule" jdbcType="INTEGER" property="taskSchedule" />
    <result column="batch" jdbcType="INTEGER" property="batch" />
    <result column="library_id" jdbcType="INTEGER" property="libraryId" />
    <result column="publisherName" jdbcType="VARCHAR" property="publisherName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    out_library_task.id, out_library_task.total_line, out_library_task.total_box, out_library_task.total_money, out_library_task.apply_state, out_library_task.approval_reason, out_library_task.apply_user, out_library_task.publisher, user.name publisherName,
    out_library_task.create_time, out_library_task.check_state, out_library_task.boxing_state, out_library_task.task_state, out_library_task.task_schedule, out_library_task.batch, out_library_task.library_id
  </sql>
  <select id="selectByExample" parameterType="com.ixilink.banknote_box.common.pojo.OutLibraryTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from out_library_task
    left join user on user.id = out_library_task.publisher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0">
      limit ${limitStart} , ${count}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from out_library_task
    left join user on user.id = out_library_task.publisher
    where out_library_task.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from out_library_task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ixilink.banknote_box.common.pojo.OutLibraryTaskExample">
    delete from out_library_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ixilink.banknote_box.common.pojo.OutLibraryTask">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into out_library_task (total_line, total_box, total_money, 
      publisher, create_time, apply_user, 
      apply_state, approval_reason, check_state, 
      boxing_state, task_state, task_schedule, 
      batch, library_id)
    values (#{totalLine,jdbcType=INTEGER}, #{totalBox,jdbcType=INTEGER}, #{totalMoney,jdbcType=INTEGER}, 
      #{publisher,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, #{applyUser,jdbcType=INTEGER}, 
      #{applyState,jdbcType=INTEGER}, #{approvalReason,jdbcType=VARCHAR}, #{checkState,jdbcType=INTEGER}, 
      #{boxingState,jdbcType=INTEGER}, #{taskState,jdbcType=INTEGER}, #{taskSchedule,jdbcType=INTEGER}, 
      #{batch,jdbcType=INTEGER}, #{libraryId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ixilink.banknote_box.common.pojo.OutLibraryTask">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into out_library_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="totalLine != null">
        total_line,
      </if>
      <if test="totalBox != null">
        total_box,
      </if>
      <if test="totalMoney != null">
        total_money,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="applyUser != null">
        apply_user,
      </if>
      <if test="applyState != null">
        apply_state,
      </if>
      <if test="approvalReason != null">
        approval_reason,
      </if>
      <if test="checkState != null">
        check_state,
      </if>
      <if test="boxingState != null">
        boxing_state,
      </if>
      <if test="taskState != null">
        task_state,
      </if>
      <if test="taskSchedule != null">
        task_schedule,
      </if>
      <if test="batch != null">
        batch,
      </if>
      <if test="libraryId != null">
        library_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="totalLine != null">
        #{totalLine,jdbcType=INTEGER},
      </if>
      <if test="totalBox != null">
        #{totalBox,jdbcType=INTEGER},
      </if>
      <if test="totalMoney != null">
        #{totalMoney,jdbcType=INTEGER},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="applyUser != null">
        #{applyUser,jdbcType=INTEGER},
      </if>
      <if test="applyState != null">
        #{applyState,jdbcType=INTEGER},
      </if>
      <if test="approvalReason != null">
        #{approvalReason,jdbcType=VARCHAR},
      </if>
      <if test="checkState != null">
        #{checkState,jdbcType=INTEGER},
      </if>
      <if test="boxingState != null">
        #{boxingState,jdbcType=INTEGER},
      </if>
      <if test="taskState != null">
        #{taskState,jdbcType=INTEGER},
      </if>
      <if test="taskSchedule != null">
        #{taskSchedule,jdbcType=INTEGER},
      </if>
      <if test="batch != null">
        #{batch,jdbcType=INTEGER},
      </if>
      <if test="libraryId != null">
        #{libraryId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ixilink.banknote_box.common.pojo.OutLibraryTaskExample" resultType="java.lang.Long">
    select count(*) from out_library_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update out_library_task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.totalLine != null">
        total_line = #{record.totalLine,jdbcType=INTEGER},
      </if>
      <if test="record.totalBox != null">
        total_box = #{record.totalBox,jdbcType=INTEGER},
      </if>
      <if test="record.totalMoney != null">
        total_money = #{record.totalMoney,jdbcType=INTEGER},
      </if>
      <if test="record.publisher != null">
        publisher = #{record.publisher,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.applyUser != null">
        apply_user = #{record.applyUser,jdbcType=INTEGER},
      </if>
      <if test="record.applyState != null">
        apply_state = #{record.applyState,jdbcType=INTEGER},
      </if>
      <if test="record.approvalReason != null">
        approval_reason = #{record.approvalReason,jdbcType=VARCHAR},
      </if>
      <if test="record.checkState != null">
        check_state = #{record.checkState,jdbcType=INTEGER},
      </if>
      <if test="record.boxingState != null">
        boxing_state = #{record.boxingState,jdbcType=INTEGER},
      </if>
      <if test="record.taskState != null">
        task_state = #{record.taskState,jdbcType=INTEGER},
      </if>
      <if test="record.taskSchedule != null">
        task_schedule = #{record.taskSchedule,jdbcType=INTEGER},
      </if>
      <if test="record.batch != null">
        batch = #{record.batch,jdbcType=INTEGER},
      </if>
      <if test="record.libraryId != null">
        library_id = #{record.libraryId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update out_library_task
    set id = #{record.id,jdbcType=INTEGER},
      total_line = #{record.totalLine,jdbcType=INTEGER},
      total_box = #{record.totalBox,jdbcType=INTEGER},
      total_money = #{record.totalMoney,jdbcType=INTEGER},
      publisher = #{record.publisher,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT},
      apply_user = #{record.applyUser,jdbcType=INTEGER},
      apply_state = #{record.applyState,jdbcType=INTEGER},
      approval_reason = #{record.approvalReason,jdbcType=VARCHAR},
      check_state = #{record.checkState,jdbcType=INTEGER},
      boxing_state = #{record.boxingState,jdbcType=INTEGER},
      task_state = #{record.taskState,jdbcType=INTEGER},
      task_schedule = #{record.taskSchedule,jdbcType=INTEGER},
      batch = #{record.batch,jdbcType=INTEGER},
      library_id = #{record.libraryId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ixilink.banknote_box.common.pojo.OutLibraryTask">
    update out_library_task
    <set>
      <if test="totalLine != null">
        total_line = #{totalLine,jdbcType=INTEGER},
      </if>
      <if test="totalBox != null">
        total_box = #{totalBox,jdbcType=INTEGER},
      </if>
      <if test="totalMoney != null">
        total_money = #{totalMoney,jdbcType=INTEGER},
      </if>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="applyUser != null">
        apply_user = #{applyUser,jdbcType=INTEGER},
      </if>
      <if test="applyState != null">
        apply_state = #{applyState,jdbcType=INTEGER},
      </if>
      <if test="approvalReason != null">
        approval_reason = #{approvalReason,jdbcType=VARCHAR},
      </if>
      <if test="checkState != null">
        check_state = #{checkState,jdbcType=INTEGER},
      </if>
      <if test="boxingState != null">
        boxing_state = #{boxingState,jdbcType=INTEGER},
      </if>
      <if test="taskState != null">
        task_state = #{taskState,jdbcType=INTEGER},
      </if>
      <if test="taskSchedule != null">
        task_schedule = #{taskSchedule,jdbcType=INTEGER},
      </if>
      <if test="batch != null">
        batch = #{batch,jdbcType=INTEGER},
      </if>
      <if test="libraryId != null">
        library_id = #{libraryId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ixilink.banknote_box.common.pojo.OutLibraryTask">
    update out_library_task
    set total_line = #{totalLine,jdbcType=INTEGER},
      total_box = #{totalBox,jdbcType=INTEGER},
      total_money = #{totalMoney,jdbcType=INTEGER},
      publisher = #{publisher,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      apply_user = #{applyUser,jdbcType=INTEGER},
      apply_state = #{applyState,jdbcType=INTEGER},
      approval_reason = #{approvalReason,jdbcType=VARCHAR},
      check_state = #{checkState,jdbcType=INTEGER},
      boxing_state = #{boxingState,jdbcType=INTEGER},
      task_state = #{taskState,jdbcType=INTEGER},
      task_schedule = #{taskSchedule,jdbcType=INTEGER},
      batch = #{batch,jdbcType=INTEGER},
      library_id = #{libraryId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>